#include <stdio.h>

#include "naunet.h"
#include "naunet_data.h"
#include "naunet_macros.h"
#include "naunet_ode.h"
#include "naunet_timer.h"

int main() {
    double spy     = 86400.0 * 365.0;

    // nH: 8.2957727e+00, Temperature: 1.6657579e+02 K, Timestep: 7.4048661e+02 yr
    // nH: 8.3125284e+00, Temperature: 1.5730350e+02 K, Timestep: 7.4048661e+02 yr, gdens: 6.3503040e-12
    // nH: 8.3800826e+00, Temperature: 1.5853516e+02 K, Timestep: 8.1404609e+02 yr, gdens: 6.4019116e-12
    // nH: 8.4129402e+00, Temperature: 3.4308430e+02 K, Timestep: 8.9816118e+02 yr, gdens: 6.4270129e-12
    // nH: 1.1664092e+01, Temperature: 3.0000000e+02 K, Timestep: 4.5717639e+03 yr, Av: 3.6373485e-01
    // nH: 3.4220315e+01, Temperature: 1.8624471e+02 K, Timestep: 2.3651540e+04 yr, Av: 6.6788472e-01
    // Flag = -4, nH: 2.5642544e+01, Temperature: 2.0350727e+02 K, Timestep: 2.2542676e+04 yr, Av: 5.6333383e-01
    // Flag = -3, nH: 2.8883460e+01, Temperature: 2.2919200e+02 K, Timestep: 2.2542676e+04 yr, Av: 6.1140377e-01
    // Flag = -3, nH: 1.8203554e+01, Temperature: 3.1735745e+02 K, Timestep: 7.5939738e+03 yr, Av: 4.5749215e-01
    // Flag = -3, nH: 2.5943937e+02, Temperature: 2.9632239e+01 K, Timestep: 1.2369426e+05 yr, Av: 1.6280718e+00
    // Flag = -3, nH: 1.4632655e+02, Temperature: 2.9758842e+01 K, Timestep: 4.4425038e+04 yr, Av: 1.2753231e+00
    // Flag = -4, nH: 1.6675602e+01, Temperature: 3.0012621e+02 K, Timestep: 6.7816154e+04 yr, Av: 4.3502809e-01
    // Flag = -4, nH: 4.5210172e+01, Temperature: 1.8976861e+02 K, Timestep: 9.5141471e+02 yr, Av: 7.4577003e-01
    // Flag = -1, nH: 2.3793402e+01, Temperature: 1.9226229e+02 K, Timestep: 6.7816154e+04 yr, Av: 5.3757784e-01
    // Flag = -6, nH: 1.3089903e+01, Temperature: 3.5507836e+02 K, Timestep: 4.5792184e+04 yr, Av: 3.8379076e-01
    // Flag = -6, nH: 1.0790698e+01, Temperature: 1.9113829e+03 K, Timestep: 4.7951361e+04 yr, Av: 3.5122833e-01
    // Flag = -1, nH: 8.4672515e+01, Temperature: 2.5080703e+01 K, Timestep: 4.9565490e+04 yr, Av: 1.0237814e+00
    // double nH       = 99955.79974519051;
    // double Tgas     = 15.10914770027733;
    // double nH       = 8.3800826e+00;
    // double Tgas     = 1.5853516e+02;
    double nH       = 8.4672515e+01;
    double Tgas     = 2.5080703e+01;
    double zeta     = 1.0e-16;
    double Av       = 1.0237814e+00;
    double omega    = 0.5;
    double G0       = 4.0;
    double rG       = 1e-5;
    double gdens    = 7.6394373e-13 * nH;
    double sites    = 1.5e15;
    double fr       = 1.0;
    double opt_thd  = 1.0;
    double opt_crd  = 1.0;
    double opt_uvd  = 1.0;
    double opt_h2d  = 1.0;
    double crdeseff = 1.0e5;
    double h2deseff = 1.0e-2;
    double uvcreff  = 1.0e-3;

    NaunetData data;
    data.nH       = nH;
    data.Tgas     = Tgas;
    data.zeta     = zeta;
    data.Av       = Av;
    data.omega    = omega;
    data.G0       = G0;
    data.rG       = rG;
    data.gdens    = gdens;
    data.sites    = sites;
    data.fr       = fr;
    data.opt_thd  = opt_thd;
    data.opt_crd  = opt_crd;
    data.opt_uvd  = opt_uvd;
    data.opt_h2d  = opt_h2d;
    data.crdeseff = crdeseff;
    data.h2deseff = h2deseff;
    data.uvcreff  = uvcreff;

    // data.zeta     = 1.3e-17;
    // data.Av       = Av;
    // data.omega    = 0.5;
    // data.G0       = 4.0;
    // data.rG       = 1.0e-5;
    // data.gdens    = 7.6394373e-13 * data.nH;
    // data.sites    = 1.5e15;
    // data.fr       = fr;
    // data.opt_thd  = opt_thd;
    // data.opt_crd  = opt_crd;
    // data.opt_uvd  = opt_uvd;
    // data.opt_h2d  = 1;
    // data.crdeseff = 1.0e5;
    // data.h2deseff = 1.0e-2;
    // data.uvcreff  = 1.0e-3;
    data.eb_crd   = 1.21e3;
    data.eb_h2d   = 1.21e3;
    data.eb_uvd   = 1.00e4;
    
    Naunet naunet;
    naunet.Init(1, 1e-30, 1e-5, 10000);

#ifdef USE_CUDA
    naunet.Reset(1);
#endif

    // naunet.Reset(1, 1e-20, 1e-5, 10000);
    naunet.Finalize();

    double y[NEQUATIONS] = {0.0};

    for (int i = 0; i < NEQUATIONS; i++)
    {
        y[i] = 1.e-40;
    }
    y[IDX_H2I]           = 0.5 * nH;
    y[IDX_HI]            = 5.0e-5 * nH;
    y[IDX_HeI]           = 9.75e-2 * nH;
    y[IDX_NI]            = 7.5e-5 * nH;
    y[IDX_OI]            = 1.8e-4 * nH;
    y[IDX_COI]           = 1.4e-4 * nH;
    // y[IDX_SI]            = 8.0e-8 * nH;
    y[IDX_SiI]           = 8.0e-9 * nH;
    y[IDX_MgI]           = 7.0e-9 * nH;
    // y[IDX_ClI]           = 4.0e-9 * nH;

    y[0] = 1.3225950e-27;
    y[1] = 7.4296483e-40;
    y[2] = 4.2455106e-40;
    y[3] = 3.6090706e-33;
    y[4] = 3.4667293e-32;
    y[5] = 5.6753583e-30;
    y[6] = 1.3243370e-24;
    y[7] = 7.9736361e-33;
    y[8] = 1.9569012e-29;
    y[9] = 5.3403057e-31;
    y[10] = 3.6801138e-33;
    y[11] = 5.7530500e-33;
    y[12] = 1.6542193e-28;
    y[13] = 4.2456217e-40;
    y[14] = 3.3745348e-25;
    y[15] = 3.9707090e-40;
    y[16] = 1.5368392e-36;
    y[17] = 3.7149220e-40;
    y[18] = 9.0340336e-37;
    y[19] = 2.0494364e-32;
    y[20] = 2.2877131e-40;
    y[21] = 1.8587685e-40;
    y[22] = 1.8394247e-27;
    y[23] = 2.7036600e-40;
    y[24] = 6.8111819e-05;
    y[25] = 1.1812802e-02;
    y[26] = 1.3303415e-06;
    y[27] = 2.2047101e-09;
    y[28] = 1.9165848e-07;
    y[29] = 9.1380114e-09;
    y[30] = 1.5407936e-09;
    y[31] = 4.0790621e-08;
    y[32] = 8.8412538e-33;
    y[33] = 5.3814788e-18;
    y[34] = 4.8457698e-16;
    y[35] = 1.8580151e-08;
    y[36] = 6.0059272e-12;
    y[37] = 3.7006512e-05;
    y[38] = 5.1483558e-10;
    y[39] = 1.7893811e-13;
    y[40] = 1.1265308e-02;
    y[41] = 6.2873790e-01;
    y[42] = 1.8786557e-03;
    y[43] = 4.2085599e+01;
    y[44] = 4.4494252e-08;
    y[45] = 1.6621025e-12;
    y[46] = 7.4034994e-12;
    y[47] = 1.8815816e-12;
    y[48] = 1.8385573e-17;
    y[49] = 1.0341813e-07;
    y[50] = 7.3295197e-09;
    y[51] = 6.0303052e-29;
    y[52] = 1.7034289e-06;
    y[53] = 7.8466701e-17;
    y[54] = 1.3927679e-08;
    y[55] = 5.9241813e-10;
    y[56] = 7.8821488e-12;
    y[57] = 2.4559249e-11;
    y[58] = 1.4013766e-11;
    y[59] = 3.1612454e-09;
    y[60] = 2.6297891e-16;
    y[61] = 8.2672065e+00;
    y[62] = 5.6779992e-04;
    y[63] = 7.4683357e-10;
    y[64] = 3.3973013e-10;
    y[65] = 6.5766282e-18;
    y[66] = 2.0638319e-11;
    y[67] = 5.6812474e-13;
    y[68] = 9.0702022e-10;
    y[69] = 2.1117435e-09;
    y[70] = 5.9387279e-07;
    y[71] = 6.3857863e-03;
    y[72] = 4.1052507e-10;
    y[73] = 1.2962341e-09;
    y[74] = 1.0608165e-14;
    y[75] = 6.4539543e-14;
    y[76] = 1.2347881e-08;
    y[77] = 5.3010184e-11;
    y[78] = 2.5776795e-09;
    y[79] = 1.3456863e-10;
    y[80] = 5.5144817e-18;
    y[81] = 1.5113138e-10;
    y[82] = 4.1740447e-09;
    y[83] = 2.1490768e-11;
    y[84] = 1.5088887e-15;
    y[85] = 2.7207861e-02;
    y[86] = 3.0629641e-09;
    y[87] = 8.9021209e-09;
    y[88] = 2.1188467e-11;
    y[89] = 7.3328494e-21;
    y[90] = 2.6112523e-16;
    y[91] = 1.1737131e-13;
    y[92] = 1.5863572e-06;
    y[93] = 6.5092556e-09;
    y[94] = 1.8939743e-09;
    y[95] = 7.2961478e-06;
    y[96] = 8.2570392e-18;
    y[97] = 2.3657285e-12;
    y[98] = 2.2815849e-40;
    y[99] = 2.2815820e-40;
    y[100] = 1.8537853e-40;
    y[101] = 1.8537853e-40;
    y[102] = 2.1949636e-13;
    y[103] = 8.6182153e-15;
    y[104] = 1.2911271e-19;
    y[105] = 5.6326102e-14;
    y[106] = 6.3152661e-27;
    y[107] = 7.1572009e-21;
    y[108] = 1.9558340e-27;
    y[109] = 1.0782739e-31;
    y[110] = 7.9810138e-29;
    y[111] = 1.5226523e-11;
    y[112] = 9.7246881e-13;
    y[113] = 1.3872686e-12;

    // y[0] = 3.6806614e-41;
    // y[1] = 7.3613227e-41;
    // y[2] = 4.2064701e-41;
    // y[3] = 2.6768446e-41;
    // y[4] = 4.2064701e-41;
    // y[5] = 3.9260388e-41;
    // y[6] = 6.5433980e-41;
    // y[7] = 2.5604601e-41;
    // y[8] = 4.3622653e-41;
    // y[9] = 4.3622653e-41;
    // y[10] = 2.7390968e-41;
    // y[11] = 3.7993924e-41;
    // y[12] = 4.9075485e-41;
    // y[13] = 4.2064701e-41;
    // y[14] = 6.9283037e-41;
    // y[15] = 3.9260388e-41;
    // y[16] = 2.5604601e-41;
    // y[17] = 3.6806614e-41;
    // y[18] = 3.5691262e-41;
    // y[19] = 2.9445291e-41;
    // y[20] = 2.2650224e-41;
    // y[21] = 1.8403307e-41;
    // y[22] = 5.7203953e-21;
    // y[23] = 2.6768446e-41;
    // y[24] = 1.1381488e-07;
    // y[25] = 1.7377943e-08;
    // y[26] = 6.5703814e-14;
    // y[27] = 9.4194213e-14;
    // y[28] = 1.1037118e-13;
    // y[29] = 7.2328420e-14;
    // y[30] = 3.3129283e-17;
    // y[31] = 6.7413717e-12;
    // y[32] = 9.3319029e-19;
    // y[33] = 1.6433868e-21;
    // y[34] = 9.4380447e-22;
    // y[35] = 5.2195032e-17;
    // y[36] = 2.6865319e-18;
    // y[37] = 1.1793235e-03;
    // y[38] = 8.0001288e-12;
    // y[39] = 2.6773146e-15;
    // y[40] = 2.7178960e-06;
    // y[41] = 4.2421930e-04;
    // y[42] = 5.4684879e-08;
    // y[43] = 4.2127768e+00;
    // y[44] = 5.7228184e-09;
    // y[45] = 1.1607080e-20;
    // y[46] = 1.3141169e-19;
    // y[47] = 4.3510936e-15;
    // y[48] = 3.4263485e-19;
    // y[49] = 1.9817280e-10;
    // y[50] = 1.3527324e-09;
    // y[51] = 1.6854494e-25;
    // y[52] = 2.0347093e-06;
    // y[53] = 1.2958698e-22;
    // y[54] = 8.4291138e-08;
    // y[55] = 4.2085312e-16;
    // y[56] = 5.6162339e-18;
    // y[57] = 2.9318677e-16;
    // y[58] = 3.1701219e-13;
    // y[59] = 1.2284700e-07;
    // y[60] = 8.3871865e-16;
    // y[61] = 8.2149200e-01;
    // y[62] = 4.0919906e-07;
    // y[63] = 9.6709267e-11;
    // y[64] = 3.7086432e-17;
    // y[65] = 9.0289289e-28;
    // y[66] = 1.0714238e-14;
    // y[67] = 2.8571682e-12;
    // y[68] = 1.2415341e-09;
    // y[69] = 5.8971230e-08;
    // y[70] = 7.7118175e-12;
    // y[71] = 6.3191563e-04;
    // y[72] = 1.1391162e-11;
    // y[73] = 1.2125988e-14;
    // y[74] = 6.4788361e-16;
    // y[75] = 3.0836857e-13;
    // y[76] = 1.0113669e-11;
    // y[77] = 6.6455800e-12;
    // y[78] = 9.9331047e-12;
    // y[79] = 3.1480369e-11;
    // y[80] = 5.1405518e-14;
    // y[81] = 1.5201565e-09;
    // y[82] = 3.9701216e-13;
    // y[83] = 8.8028901e-12;
    // y[84] = 1.4572470e-19;
    // y[85] = 1.5166450e-03;
    // y[86] = 1.8425557e-11;
    // y[87] = 5.2500136e-13;
    // y[88] = 1.7563456e-11;
    // y[89] = 4.9228157e-27;
    // y[90] = 2.4678065e-19;
    // y[91] = 2.2541001e-16;
    // y[92] = 1.0160677e-09;
    // y[93] = 6.1415569e-10;
    // y[94] = 7.2027430e-07;
    // y[95] = 1.7913777e-09;
    // y[96] = 1.7639115e-25;
    // y[97] = 2.9843391e-17;
    // y[98] = 2.2814872e-41;
    // y[99] = 2.2650224e-41;
    // y[100] = 1.8403307e-41;
    // y[101] = 1.8403307e-41;
    // y[102] = 3.3547100e-18;
    // y[103] = 1.2432089e-10;
    // y[104] = 1.0346120e-18;
    // y[105] = 4.8466639e-16;
    // y[106] = 4.5175394e-26;
    // y[107] = 2.6082407e-16;
    // y[108] = 8.2877324e-23;
    // y[109] = 1.6275506e-30;
    // y[110] = 1.3486760e-23;
    // y[111] = 4.7124430e-15;
    // y[112] = 5.4084981e-14;
    // y[113] = 1.0657848e-12;

    // y[0] = 6.2921991e-12;
    // y[1] = 1.2149451e-14;
    // y[2] = 5.6629729e-11;
    // y[3] = 3.2629431e-20;
    // y[4] = 8.8610440e-25;
    // y[5] = 5.8509719e-14;
    // y[6] = 1.0707838e-10;
    // y[7] = 1.2577717e-18;
    // y[8] = 3.8118052e-22;
    // y[9] = 2.3562000e-24;
    // y[10] = 9.9886360e-23;
    // y[11] = 1.2420161e-18;
    // y[12] = 3.4007783e-15;
    // y[13] = 3.0415926e-20;
    // y[14] = 4.7675400e-11;
    // y[15] = 5.5168276e-18;
    // y[16] = 9.3089496e-26;
    // y[17] = 8.5718716e-18;
    // y[18] = 3.5473770e-25;
    // y[19] = 5.9538717e-25;
    // y[20] = 2.2561761e-41;
    // y[21] = 1.8331431e-41;
    // y[22] = 3.8826174e-14;
    // y[23] = 2.6663899e-41;
    // y[24] = 3.1717881e-08;
    // y[25] = 4.1055588e-09;
    // y[26] = 8.4101621e-15;
    // y[27] = 1.2792451e-14;
    // y[28] = 1.5890355e-14;
    // y[29] = 1.0635513e-14;
    // y[30] = 2.9439022e-16;
    // y[31] = 5.7297094e-13;
    // y[32] = 1.1112175e-12;
    // y[33] = 7.3691930e-16;
    // y[34] = 1.8221164e-20;
    // y[35] = 2.8362603e-19;
    // y[36] = 3.6130914e-19;
    // y[37] = 1.1749046e-03;
    // y[38] = 7.9708638e-12;
    // y[39] = 2.7781168e-16;
    // y[40] = 1.2944202e-06;
    // y[41] = 4.2098736e-04;
    // y[42] = 2.5789225e-08;
    // y[43] = 4.1963259e+00;
    // y[44] = 5.6997600e-09;
    // y[45] = 2.5648308e-19;
    // y[46] = 4.3205460e-15;
    // y[47] = 4.0280512e-16;
    // y[48] = 1.5545617e-19;
    // y[49] = 5.0045113e-11;
    // y[50] = 7.4032146e-10;
    // y[51] = 5.9275320e-20;
    // y[52] = 1.0090648e-06;
    // y[53] = 3.0533077e-17;
    // y[54] = 2.2419711e-08;
    // y[55] = 9.3064837e-17;
    // y[56] = 7.8913494e-19;
    // y[57] = 2.4639317e-17;
    // y[58] = 4.7575845e-14;
    // y[59] = 3.0651317e-08;
    // y[60] = 1.7590872e-15;
    // y[61] = 8.1828378e-01;
    // y[62] = 1.9859347e-07;
    // y[63] = 9.6319746e-11;
    // y[64] = 3.2872334e-18;
    // y[65] = 3.7016262e-24;
    // y[66] = 1.5287031e-15;
    // y[67] = 7.6358158e-13;
    // y[68] = 7.4956310e-10;
    // y[69] = 5.8745714e-08;
    // y[70] = 2.8765110e-12;
    // y[71] = 6.2944840e-04;
    // y[72] = 1.4886470e-11;
    // y[73] = 2.4038448e-15;
    // y[74] = 6.4529639e-16;
    // y[75] = 1.4478719e-13;
    // y[76] = 1.5117024e-12;
    // y[77] = 6.6188800e-12;
    // y[78] = 1.4530515e-12;
    // y[79] = 3.1359859e-11;
    // y[80] = 8.4393537e-12;
    // y[81] = 6.9975349e-10;
    // y[82] = 1.3310222e-13;
    // y[83] = 2.4519459e-12;
    // y[84] = 5.5669752e-20;
    // y[85] = 1.5106901e-03;
    // y[86] = 1.5667197e-11;
    // y[87] = 2.3049770e-13;
    // y[88] = 4.7838291e-12;
    // y[89] = 3.0537573e-26;
    // y[90] = 2.0547032e-20;
    // y[91] = 5.2478534e-17;
    // y[92] = 1.6161231e-10;
    // y[93] = 3.4163783e-10;
    // y[94] = 7.1849671e-07;
    // y[95] = 8.4407224e-10;
    // y[96] = 4.8220815e-26;
    // y[97] = 9.8106723e-19;
    // y[98] = 5.6117978e-33;
    // y[99] = 1.0802534e-36;
    // y[100] = 4.5007055e-33;
    // y[101] = 2.6281491e-37;
    // y[102] = 5.3002468e-18;
    // y[103] = 2.9542733e-11;
    // y[104] = 6.3221360e-18;
    // y[105] = 1.1421221e-16;
    // y[106] = 2.5782724e-20;
    // y[107] = 1.8648349e-16;
    // y[108] = 6.8368528e-15;
    // y[109] = 6.3208212e-23;
    // y[110] = 7.3132481e-19;
    // y[111] = 1.7370114e-15;
    // y[112] = 1.2406526e-14;
    // y[113] = 1.4699428e-13;

    // y[0] = 3.6367312e-21;
    // y[1] = 7.2734624e-21;
    // y[2] = 4.1562642e-21;
    // y[3] = 2.6448954e-21;
    // y[4] = 4.1562642e-21;
    // y[5] = 3.8791799e-21;
    // y[6] = 6.4652999e-21;
    // y[7] = 2.5299000e-21;
    // y[8] = 4.3101999e-21;
    // y[9] = 4.3101999e-21;
    // y[10] = 2.7064046e-21;
    // y[11] = 3.7540451e-21;
    // y[12] = 4.8489749e-21;
    // y[13] = 4.1562642e-21;
    // y[14] = 6.8456117e-21;
    // y[15] = 3.8791799e-21;
    // y[16] = 2.5299000e-21;
    // y[17] = 3.6367312e-21;
    // y[18] = 3.5265272e-21;
    // y[19] = 2.9093850e-21;
    // y[20] = 2.2379884e-21;
    // y[21] = 1.8183656e-21;
    // y[22] = 3.6367312e-21;
    // y[23] = 2.6448954e-21;
    // y[24] = 9.6979498e-21;
    // y[25] = 9.6979498e-21;
    // y[26] = 8.9519537e-21;
    // y[27] = 8.9519537e-21;
    // y[28] = 8.3125284e-21;
    // y[29] = 8.3125284e-21;
    // y[30] = 7.7583599e-21;
    // y[31] = 7.7583599e-21;
    // y[32] = 3.6367312e-21;
    // y[33] = 7.2734624e-21;
    // y[34] = 7.2734624e-21;
    // y[35] = 4.4759769e-21;
    // y[36] = 4.4759769e-21;
    // y[37] = 1.1655001e-03;
    // y[38] = 4.1562642e-21;
    // y[39] = 2.6448954e-21;
    // y[40] = 8.3085989e-40;
    // y[41] = 4.1625003e-04;
    // y[42] = 1.1637540e-19;
    // y[43] = 4.1625003e+00;
    // y[44] = 5.8187699e-20;
    // y[45] = 4.1562642e-21;
    // y[46] = 3.8791799e-21;
    // y[47] = 3.8791799e-21;
    // y[48] = 3.6367312e-21;
    // y[49] = 6.4652999e-21;
    // y[50] = 6.4652999e-21;
    // y[51] = 2.5299000e-21;
    // y[52] = 3.8791799e-20;
    // y[53] = 3.7540451e-21;
    // y[54] = 6.1250210e-21;
    // y[55] = 4.3101999e-21;
    // y[56] = 4.3101999e-21;
    // y[57] = 4.1562642e-21;
    // y[58] = 4.0129448e-21;
    // y[59] = 4.0129448e-21;
    // y[60] = 2.5861200e-21;
    // y[61] = 8.1168757e-01;
    // y[62] = 2.9093850e-20;
    // y[63] = 2.3275080e-20;
    // y[64] = 4.3101999e-21;
    // y[65] = 2.7064046e-21;
    // y[66] = 3.7540451e-21;
    // y[67] = 3.7540451e-21;
    // y[68] = 4.0129448e-21;
    // y[69] = 5.8275005e-08;
    // y[70] = 4.8489749e-21;
    // y[71] = 6.2437505e-04;
    // y[72] = 8.3125284e-21;
    // y[73] = 4.1562642e-21;
    // y[74] = 4.1562642e-21;
    // y[75] = 4.0129448e-21;
    // y[76] = 7.7583599e-21;
    // y[77] = 7.7583599e-21;
    // y[78] = 7.2734624e-21;
    // y[79] = 7.2734624e-21;
    // y[80] = 6.8456117e-21;
    // y[81] = 6.8456117e-21;
    // y[82] = 3.8791799e-21;
    // y[83] = 3.8791799e-21;
    // y[84] = 2.5299000e-21;
    // y[85] = 1.4985001e-03;
    // y[86] = 7.2734624e-21;
    // y[87] = 3.6367312e-21;
    // y[88] = 3.6367312e-21;
    // y[89] = 3.5265272e-21;
    // y[90] = 3.5265272e-21;
    // y[91] = 2.7708428e-21;
    // y[92] = 6.8456117e-21;
    // y[93] = 6.8456117e-21;
    // y[94] = 7.1357149e-07;
    // y[95] = 4.1562642e-21;
    // y[96] = 2.9093850e-21;
    // y[97] = 2.9093850e-21;
    // y[98] = 2.2379884e-21;
    // y[99] = 2.2379884e-21;
    // y[100] = 1.8183656e-21;
    // y[101] = 1.8183656e-21;
    // y[102] = 4.0129448e-21;
    // y[103] = 4.0129448e-21;
    // y[104] = 3.8791799e-21;
    // y[105] = 3.8791799e-21;
    // y[106] = 3.7540451e-21;
    // y[107] = 3.7540451e-21;
    // y[108] = 3.6367312e-21;
    // y[109] = 3.6367312e-21;
    // y[110] = 3.5265272e-21;
    // y[111] = 2.6448954e-21;
    // y[112] = 2.6448954e-21;
    // y[113] = 2.5861200e-21;

    FILE *fbin           = fopen("evolution_singlegrid.bin", "w");
    FILE *ftxt           = fopen("evolution_singlegrid.txt", "w");
    FILE *ttxt           = fopen("time_singlegrid.txt", "w");
// #ifdef NAUNET_DEBUG
    printf("Initialization is done. Start to evolve.\n");
    FILE *rtxt = fopen("reactionrates.txt", "w");
    double rates[NREACTIONS] = {0.0};
// #endif

    double logtstart = 3.0, logtend = 4.0;
    double dtyr = 0.0, time = 0.0;
    for (double logtime = logtstart; logtime < logtend; logtime += 0.1) {
// #ifdef NAUNET_DEBUG
        EvalRates(rates, y, &data);
        for (int j = 0; j < NREACTIONS; j++)
        {
            fprintf(rtxt, "%13.7e ", rates[j]);
        }
        fprintf(rtxt, "\n");
// #endif

        Naunet naunet;
        naunet.Init(1, 1e-30, 1e-5, 10000);

        // dtyr = pow(10.0, logtime) - time;
        // dtyr = 7.4048661e+02;
        // dtyr = 7.4048661e+02;
        // dtyr = 2.2542676e+04;
        // dtyr = 6.7816154e+04;
        // dtyr = 4.7951361e+04;
        dtyr = 4.9565490e+04;

        fwrite(&time, sizeof(double), 1, fbin);
        fwrite(y, sizeof(double), NEQUATIONS, fbin);

        fprintf(ftxt, "%13.7e ", time);
        for (int j = 0; j < NEQUATIONS; j++) {
            fprintf(ftxt, "%13.7e ", y[j]);
        }
        fprintf(ftxt, "\n");

        Timer timer;
        timer.start();
        int flag = naunet.Solve(y, dtyr * spy, &data);
        printf("flag: %d\n", flag);
        timer.stop();

        time += dtyr;

        // float duration = (float)timer.elapsed() / 1e6;
        double duration = timer.elapsed();
        fprintf(ttxt, "%8.5e \n", duration);
        printf("Time = %13.7e yr, elapsed: %8.5e sec\n", time, duration);


        naunet.Finalize();
    }

    // save the final results
    fwrite(&time, sizeof(double), 1, fbin);
    fwrite(y, sizeof(double), NEQUATIONS, fbin);

    fprintf(ftxt, "%13.7e ", time);
    for (int j = 0; j < NEQUATIONS; j++) {
        fprintf(ftxt, "%13.7e ", y[j]);
    }
    fprintf(ftxt, "\n");

    fclose(fbin);
    fclose(ftxt);
    fclose(ttxt);
// #ifdef NAUNET_DEBUG
    fclose(rtxt);
// #endif

    // naunet.Finalize();

    return 0;
}
